name: CI/CD

on:
  push:
    branches:
      - master
    paths:
      - '**'
      - '!**.md'
    tags:
      - 'v*'
  pull_request:
    paths:
      - '**'
      - '!**.md'

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get npm cache directory
        id: npm-config
        run: echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Dependencies
        id: cache-npm
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-config.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Clean npm cache directory before Deploy
        if: steps.cache-npm.outputs.cache-hit != 'true' && github.event_name == 'push' && contains(github.event.commits[0].message, 'increment version')
        run: npm cache clear --force

      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test with Jest
        run: npm test

      - name: Report Code Coverage to codecov
        uses: codecov/codecov-action@v1
      - name: GitHub Actions Build Test
        uses: ./
        with:
          image-url: 'https://user-images.githubusercontent.com/24802730/74030931-9a21ac00-49f3-11ea-872e-374d5bd3e586.jpg'
      - name: Drafts next Release notes
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    needs: [build]
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Get Version
        id: get_tag
        run: echo ::set-output name=version::${TAG_REF_NAME##*/}
        env:
          TAG_REF_NAME: ${{ github.ref }}
      - name: Release GitHub Actions
        uses: technote-space/release-github-actions@v4
        with:
          CLEAN_TARGETS: .[!.]*,__tests__,coverage,images,lib,node_modules,src,*.js,*.ts,*.json,*.lock,_config.yml
          COMMIT_MESSAGE: 'build: release ${{ steps.get_tag.outputs.version }} via ${{ github.sha }}'
